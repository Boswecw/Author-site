<!-- src/lib/components/ReliableImage.svelte - COMPLETE and WORKING -->
<script lang="ts">
  import { createFallbackImage } from '$lib/utils/image';

  // Props
  export let src: string | null | undefined;
  export let alt: string = '';
  export let className: string = '';
  export let fallbackText: string = '';
  export let fallbackType: 'book' | 'avatar' | 'logo' = 'book';

  // Use server-built URLs directly with fallback
  function getImageUrl(): string {
    if (src && typeof src === 'string' && src.trim()) {
      return src.trim();
    }
    
    const text = fallbackText || alt || fallbackType.toUpperCase();
    return createFallbackImage(text.substring(0, 10), fallbackType);
  }

  // Error handler
  function handleError(event: Event) {
    const img = event.currentTarget as HTMLImageElement;
    const fallbackSrc = createFallbackImage(
      (fallbackText || alt || fallbackType.toUpperCase()).substring(0, 10), 
      fallbackType
    );
    
    img.src = fallbackSrc;
    img.style.opacity = '0.8';
    console.warn('[ReliableImage] Failed to load image:', src);
  }
</script>

<img
  src={getImageUrl()}
  {alt}
  class={className}
  loading="lazy"
  decoding="async"
  on:error={handleError}
/>